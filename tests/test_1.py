#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π IFC Converter 2.0
"""

import os
import requests
import time
import tempfile
from file_naming_utils import get_next_indexed_filename, get_unique_sheet_name, sanitize_sheet_name


def test_file_naming():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤...")

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    with tempfile.TemporaryDirectory() as temp_dir:
        # –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        result1 = get_next_indexed_filename(temp_dir, "test.csv")
        print(f"‚úÖ –û–±—ã—á–Ω–æ–µ –∏–º—è: test.csv ‚Üí {result1}")

        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        test_file = os.path.join(temp_dir, "test.csv")
        with open(test_file, 'w') as f:
            f.write("test")

        # –¢–µ—Å—Ç 2: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏
        result2 = get_next_indexed_filename(temp_dir, "test.csv")
        print(f"‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: test.csv ‚Üí {result2}")

        # –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω —Ñ–∞–π–ª
        test_file2 = os.path.join(temp_dir, result2)
        with open(test_file2, 'w') as f:
            f.write("test")

        # –¢–µ—Å—Ç 3: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
        result3 = get_next_indexed_filename(temp_dir, "test.csv")
        print(f"‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: test.csv ‚Üí {result3}")

        # –¢–µ—Å—Ç 4: –ò–º—è —Å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        result4 = get_next_indexed_filename(temp_dir, "test<>file:name.csv")
        print(f"‚úÖ –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã: test<>file:name.csv ‚Üí {result4}")

        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")


def test_sheet_naming():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ Google Sheets"""
    print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ Google Sheets...")

    # –ú–æ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç spreadsheet
    class MockWorksheet:
        def __init__(self, title):
            self.title = title

    class MockSpreadsheet:
        def __init__(self):
            self.worksheets_list = [
                MockWorksheet("Sheet1"),
                MockWorksheet("Project_Model"),
                MockWorksheet("Project_Model_1"),
                MockWorksheet("Test_Sheet")
            ]

        def worksheets(self):
            return self.worksheets_list

    mock_spreadsheet = MockSpreadsheet()

    # –¢–µ—Å—Ç 1: –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
    result1 = get_unique_sheet_name(mock_spreadsheet, "New_Project.ifc")
    print(f"‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è: New_Project.ifc ‚Üí {result1}")

    # –¢–µ—Å—Ç 2: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    result2 = get_unique_sheet_name(mock_spreadsheet, "Project_Model.ifc")
    print(f"‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: Project_Model.ifc ‚Üí {result2}")

    # –¢–µ—Å—Ç 3: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    result3 = get_unique_sheet_name(mock_spreadsheet, "Project_Model.ifc")
    print(f"‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: Project_Model.ifc ‚Üí {result3}")

    # –¢–µ—Å—Ç 4: –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏
    result4 = sanitize_sheet_name("Test@#$%^&*()File.ifc")
    print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤: Test@#$%^&*()File.ifc ‚Üí {result4}")

    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")


def test_health_check(base_url="http://localhost:5000"):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check endpoints"""
    print("üíö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Health Check...")

    try:
        # –¢–µ—Å—Ç JSON endpoint
        response = requests.get(f"{base_url}/health?format=json", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ JSON Health Check: {data['status']}")
            print(f"   –í–µ—Ä—Å–∏—è: {data.get('version', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')}")
            print(f"   –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {data.get('uptime', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print(f"‚ùå JSON Health Check failed: {response.status_code}")

        # –¢–µ—Å—Ç HTML endpoint
        response = requests.get(f"{base_url}/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ HTML Health Check: OK")
        else:
            print(f"‚ùå HTML Health Check failed: {response.status_code}")

    except requests.exceptions.RequestException as e:
        print(f"‚ùå Health Check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ localhost:5000")

    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Health Check –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")


def test_api_endpoints(base_url="http://localhost:5000"):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"""
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")

    endpoints = [
        ("/", "GET", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/health", "GET", "Health Check HTML"),
        ("/health?format=json", "GET", "Health Check JSON"),
        ("/login", "GET", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"),
    ]

    for endpoint, method, description in endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            status = "‚úÖ" if response.status_code in [200, 302] else "‚ùå"
            print(f"{status} {method} {endpoint} ({description}): {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {method} {endpoint} ({description}): –û—à–∏–±–∫–∞ - {e}")

    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")


def test_file_upload_simulation():
    """–°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)"""
    print("üì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π IFC —Ñ–∞–π–ª (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π)
    test_ifc_content = """ISO-10303-21;
HEADER;
FILE_DESCRIPTION(('ViewDefinition[CoordinationView]'),'2;1');
FILE_NAME('test.ifc','2025-08-24T12:00:00',('Test'),('Test'),'IfcOpenShell','IfcOpenShell','');
FILE_SCHEMA(('IFC4'));
ENDSEC;
DATA;
#1=IFCPROJECT('0YvhMod9X3uvUyOaWNb6oP',$,'Test Project',$,$,$,$,$,#2);
#2=IFCUNITASSIGNMENT((#3));
#3=IFCSIUNIT(*,.LENGTHUNIT.,.MILLI.,.METRE.);
ENDSEC;
END-ISO-10303-21;"""

    try:
        with tempfile.NamedTemporaryFile(suffix='.ifc', mode='w', delete=False) as f:
            f.write(test_ifc_content)
            temp_ifc_path = f.name

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π IFC —Ñ–∞–π–ª: {os.path.basename(temp_ifc_path)}")

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É,
        # –Ω–æ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   curl -F 'file=@test.ifc' http://localhost:5000/uploads")

        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(temp_ifc_path)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")

    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")


def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")

    required_vars = [
        'GOOGLE_CLIENT_ID',
        'GOOGLE_CLIENT_SECRET',
        'GS_SPREADSHEET_ID',
        'GS_CLIENT_EMAIL',
        'SECRET_KEY'
    ]

    missing = []
    present = []

    for var in required_vars:
        if os.getenv(var):
            present.append(var)
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            value = os.getenv(var)
            display = value[:20] + "..." if len(value) > 20 else value
            print(f"‚úÖ {var}: {display}")
        else:
            missing.append(var)
            print(f"‚ùå {var}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")

    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(present)}/{len(required_vars)} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    if missing:
        print("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
        print("   –°–º–æ—Ç—Ä–∏—Ç–µ .env.example –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞")
    else:
        print("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")

    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ IFC Converter 2.0 - –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("=" * 50)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è (–Ω–µ —Ç—Ä–µ–±—É—é—Ç —Å–µ—Ä–≤–µ—Ä–∞)
    test_file_naming()
    test_sheet_naming()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    check_environment()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API (—Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞)
    print("‚ö†Ô∏è –°–ª–µ–¥—É—é—â–∏–µ —Ç–µ—Å—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(2)

    test_health_check()
    test_api_endpoints()
    test_file_upload_simulation()

    print("=" * 50)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: docker-compose up -d")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ health check: http://localhost:5000/health")
    print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤")


if __name__ == "__main__":
    main()