#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã @app.before_first_request
–î–ª—è –≤–µ—Ç–∫–∏ improovements-1
"""

import os
import sys
from flask import Flask


def check_flask_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Flask"""
    try:
        import flask
        version = flask.__version__
        print(f"‚úÖ Flask –≤–µ—Ä—Å–∏—è: {version}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ @app.before_first_request
        app = Flask(__name__)

        if hasattr(app, 'before_first_request'):
            print("‚ö†Ô∏è before_first_request –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è Flask)")
        else:
            print("‚úÖ before_first_request –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è Flask)")

        return True
    except ImportError:
        print("‚ùå Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False


def test_main_import():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ main.py"""
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
        sys.path.insert(0, '.')

        print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ main.py...")

        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from main import app, create_templates, create_app

        print("‚úÖ –ò–º–ø–æ—Ä—Ç main.py —É—Å–ø–µ—à–µ–Ω")
        print(f"‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {type(app)}")
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è create_templates –¥–æ—Å—Ç—É–ø–Ω–∞")
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è create_app –¥–æ—Å—Ç—É–ø–Ω–∞")

        return True

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def test_template_creation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤"""
    try:
        print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤...")

        from main import create_templates

        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã
        create_templates()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
        templates = ['uploads.html', 'dashboard.html', 'health.html']
        created = []

        for template in templates:
            template_path = os.path.join('templates', template)
            if os.path.exists(template_path):
                size = os.path.getsize(template_path)
                created.append(f"{template} ({size} –±–∞–π—Ç)")
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {template} ({size} –±–∞–π—Ç)")
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {template}")

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(created)}/{len(templates)}")
        return len(created) == len(templates)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: {e}")
        return False


def test_app_startup():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")

        from main import create_app

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
        app = create_app()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        routes = []
        for rule in app.url_map.iter_rules():
            routes.append(f"{rule.methods} {rule.rule}")

        print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(routes)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
        important_routes = ['/', '/health', '/uploads', '/login']
        for route in important_routes:
            found = any(route in r for r in routes)
            status = "‚úÖ" if found else "‚ùå"
            print(f"{status} –ú–∞—Ä—à—Ä—É—Ç {route}: {'–Ω–∞–π–¥–µ–Ω' if found else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    required_modules = [
        'flask',
        'authlib',
        'ifcopenshell',
        'gspread',
        'oauth2client'
    ]

    missing = []
    present = []

    for module in required_modules:
        try:
            __import__(module)
            present.append(module)
            print(f"‚úÖ {module}")
        except ImportError:
            missing.append(module)
            print(f"‚ùå {module}")

    print(f"üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {len(present)}/{len(required_modules)}")

    if missing:
        print("‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–¥—É–ª–µ–π:")
        for module in missing:
            print(f"   pip install {module}")

    return len(missing) == 0


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Flask before_first_request")
    print("=" * 55)

    checks = [
        ("–í–µ—Ä—Å–∏—è Flask", check_flask_version),
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", check_dependencies),
        ("–ò–º–ø–æ—Ä—Ç main.py", test_main_import),
        ("–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤", test_template_creation),
        ("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", test_app_startup),
    ]

    passed = 0
    total = len(checks)

    for name, check_func in checks:
        print(f"\nüìã {name}:")
        try:
            result = check_func()
            if result:
                passed += 1
                print(f"‚úÖ {name}: –ü–†–û–ô–î–ï–ù")
            else:
                print(f"‚ùå {name}: –ü–†–û–í–ê–õ–ï–ù")
        except Exception as e:
            print(f"üí• {name}: –û–®–ò–ë–ö–ê - {e}")

    print("\n" + "=" * 55)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")

    if passed == total:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python main.py")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.")

        if not os.path.exists('.env'):
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –ø–æ –ø—Ä–∏–º–µ—Ä—É .env.example")
            print("‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
            print("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")


if __name__ == "__main__":
    main()