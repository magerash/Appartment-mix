#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —Å Let's Encrypt

set -e

DOMAIN=${1:-"your-domain.com"}
EMAIL=${2:-"admin@$DOMAIN"}

echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ certbot
if ! command -v certbot &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot..."
    sudo apt update
    sudo apt install -y certbot python3-certbot-nginx
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è SSL
mkdir -p ssl

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
docker-compose stop nginx || true

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo "üìú –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç Let's Encrypt..."
sudo certbot certonly --standalone \
    --email $EMAIL \
    --agree-tos \
    --no-eff-email \
    -d $DOMAIN

# –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
sudo cp /etc/letsencrypt/live/$DOMAIN/fullchain.pem ssl/cert.pem
sudo cp /etc/letsencrypt/live/$DOMAIN/privkey.pem ssl/key.pem
sudo chown $USER:$USER ssl/*.pem

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
echo "‚öôÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx..."
sed -i "s/your-domain.com/$DOMAIN/g" nginx.conf
sed -i 's/# server {/server {/' nginx.conf
sed -i 's/# }/}/' nginx.conf
sed -i 's/# //' nginx.conf

# –î–æ–±–∞–≤–ª—è–µ–º HTTP -> HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç
cat > nginx-ssl.conf << EOF
events {
    worker_connections 1024;
}

http {
    upstream app {
        server ifc-converter:5000;
    }

    # HTTP —Å–µ—Ä–≤–µ—Ä (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS)
    server {
        listen 80;
        server_name $DOMAIN;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://\$server_name\$request_uri;
        }
    }

    # HTTPS —Å–µ—Ä–≤–µ—Ä
    server {
        listen 443 ssl http2;
        server_name $DOMAIN;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        client_max_body_size 100M;

        location / {
            proxy_pass http://app;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;

            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }
}
EOF

mv nginx-ssl.conf nginx.conf

# –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
(crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet && docker-compose restart nginx") | crontab -

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å SSL..."
docker-compose up -d

echo "‚úÖ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
echo ""
echo "üìã –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ crontab"
echo "üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: sudo certbot certificates"